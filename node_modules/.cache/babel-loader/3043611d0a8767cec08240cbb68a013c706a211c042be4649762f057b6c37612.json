{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n\n// creating custom hook to fecth data from giving api url\nfunction useFetch(url) {\n  _s();\n  // creating an array of objects with use states\n  let [datas, setDatas] = useState(null);\n\n  // creating variable to add loading message\n  let [isloaded, setIsloaded] = useState(true);\n\n  // creating usestate variable to display error on browser page\n  let [errors, setErrors] = useState(null);\n\n  // passing array of state change to trigger use Effect\n  useEffect(() => {\n    const abortConst = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal\n      }).then(res => {\n        // throwing self error if not able to fetch data from api\n        if (!res.ok) {\n          throw Error('could not fetch data from api');\n        }\n        return res.json();\n      }).then(data => {\n        setIsloaded(false);\n        setDatas(data);\n        setErrors(null);\n      }).catch(error => {\n        console.log(error);\n        setErrors(error.message);\n        setIsloaded(false); // so as not to display loading when there is an error\n      });\n    }, 2000);\n    return () => console.log('cleanup');\n  }, [url]);\n  //returning an object of values\n  return {\n    datas,\n    isloaded,\n    errors\n  };\n}\n_s(useFetch, \"eDP6WQk7hswsOksIbdkNaNlP2fY=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","datas","setDatas","isloaded","setIsloaded","errors","setErrors","abortConst","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","data","catch","error","console","log","message"],"sources":["/home/joseph/Desktop/coding_mat/learning_react/first-react/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n// creating custom hook to fecth data from giving api url\nfunction useFetch(url) {\n    // creating an array of objects with use states\n    let [datas, setDatas] = useState(null);\n\n    // creating variable to add loading message\n    let [isloaded, setIsloaded] = useState(true);\n\n    // creating usestate variable to display error on browser page\n    let [errors, setErrors] = useState(null);\n\n     // passing array of state change to trigger use Effect\n     useEffect(() => {\n        const abortConst = new AbortController();\n        setTimeout(() => {\n            fetch(url, {signal})\n            .then((res) => {\n                // throwing self error if not able to fetch data from api\n                if(!res.ok)\n                {\n                    throw Error('could not fetch data from api');\n                }\n                return res.json();\n            })\n            .then((data) => {\n                setIsloaded(false);\n                setDatas(data);\n                setErrors(null);\n            })\n            .catch((error) => {\n                console.log(error);\n                setErrors(error.message);\n                setIsloaded(false); // so as not to display loading when there is an error\n            });\n        }, 2000);\n        return () => console.log('cleanup');\n    }, [url])\n    //returning an object of values\n    return {\n        datas, isloaded, errors\n    }\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA,SAASC,QAAQ,CAACC,GAAG,EAAE;EAAA;EACnB;EACA,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,IAAI,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,IAAI,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEvC;EACAD,SAAS,CAAC,MAAM;IACb,MAAMU,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxCC,UAAU,CAAC,MAAM;MACbC,KAAK,CAACV,GAAG,EAAE;QAACW;MAAM,CAAC,CAAC,CACnBC,IAAI,CAAEC,GAAG,IAAK;QACX;QACA,IAAG,CAACA,GAAG,CAACC,EAAE,EACV;UACI,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAChD;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE;MACrB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACZb,WAAW,CAAC,KAAK,CAAC;QAClBF,QAAQ,CAACe,IAAI,CAAC;QACdX,SAAS,CAAC,IAAI,CAAC;MACnB,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBb,SAAS,CAACa,KAAK,CAACG,OAAO,CAAC;QACxBlB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMgB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACvC,CAAC,EAAE,CAACrB,GAAG,CAAC,CAAC;EACT;EACA,OAAO;IACHC,KAAK;IAAEE,QAAQ;IAAEE;EACrB,CAAC;AACL;AAAC,GAxCQN,QAAQ;AA0CjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}