{"ast":null,"code":"var _jsxFileName = \"/home/joseph/Desktop/coding_mat/learning_react/first-react/src/Homepage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react'; //using state hooks\n// using a functio that receives arguments\n// <button onClick={() => {hello(\"joe\")}}>Click</button>\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  //let clickBtn = document.getElementById(\"getBtn\");\n  function hello(name) {\n    console.log(name);\n  }\n  // setting a reactive element\n  let [name, setName] = useState(\"name\");\n  let [age, setAge] = useState(0);\n  // function to display the \n  function dispName() {\n    let nameInput = document.getElementById(\"name\").value;\n    let ageInput = document.getElementById(\"age\").value;\n    name = setName(nameInput);\n    age = setAge(ageInput);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        hello(\"joe\");\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"your name and age?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"age\",\n      id: \"age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"enter\",\n      onClick: dispName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", name, \" is \", age, \" years old\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Homepage, \"EZcBc5xmlpsU0U05rRWseTJGs0Y=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["useState","Homepage","hello","name","console","log","setName","age","setAge","dispName","nameInput","document","getElementById","value","ageInput"],"sources":["/home/joseph/Desktop/coding_mat/learning_react/first-react/src/Homepage.js"],"sourcesContent":["import { useState } from 'react' //using state hooks\n// using a functio that receives arguments\n// <button onClick={() => {hello(\"joe\")}}>Click</button>\n\nconst Homepage = () => {\n    //let clickBtn = document.getElementById(\"getBtn\");\n    function hello (name){\n        console.log(name);\n    }\n    // setting a reactive element\n    let [name, setName] = useState(\"name\");\n    let [age, setAge] = useState(0);\n    // function to display the \n    function dispName (){\n        let nameInput = document.getElementById(\"name\").value;\n        let ageInput = document.getElementById(\"age\").value;\n        name = setName(nameInput);\n        age = setAge(ageInput);\n    }\n\n    return(\n        <main>\n            <h1>React</h1>\n            <button onClick={() => {hello(\"joe\")}}>Click</button>\n            <p>your name and age?</p>\n            <input type=\"text\" name=\"name\" id=\"name\" />\n            <input type=\"text\" name=\"age\" id=\"age\" />\n            <input type=\"submit\" value=\"enter\" onClick = {dispName}/>\n            <p> {name} is {age} years old</p>\n        </main>\n    )\n}\n\nexport default Homepage"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO,EAAC;AACjC;AACA;AAAA;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB;EACA,SAASC,KAAK,CAAEC,IAAI,EAAC;IACjBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACrB;EACA;EACA,IAAI,CAACA,IAAI,EAAEG,OAAO,CAAC,GAAGN,QAAQ,CAAC,MAAM,CAAC;EACtC,IAAI,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC/B;EACA,SAASS,QAAQ,GAAG;IAChB,IAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAK;IACrD,IAAIC,QAAQ,GAAGH,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,KAAK;IACnDV,IAAI,GAAGG,OAAO,CAACI,SAAS,CAAC;IACzBH,GAAG,GAAGC,MAAM,CAACM,QAAQ,CAAC;EAC1B;EAEA,oBACI;IAAA,wBACI;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAQ,OAAO,EAAE,MAAM;QAACZ,KAAK,CAAC,KAAK,CAAC;MAAA,CAAE;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACrD;MAAA,UAAG;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAI,eACzB;MAAO,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,EAAE,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3C;MAAO,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,KAAK;MAAC,EAAE,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACzC;MAAO,IAAI,EAAC,QAAQ;MAAC,KAAK,EAAC,OAAO;MAAC,OAAO,EAAIO;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eACzD;MAAA,WAAG,GAAC,EAACN,IAAI,EAAC,MAAI,EAACI,GAAG,EAAC,YAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEf,CAAC;AAAA,GA3BKN,QAAQ;AAAA,KAARA,QAAQ;AA6Bd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}