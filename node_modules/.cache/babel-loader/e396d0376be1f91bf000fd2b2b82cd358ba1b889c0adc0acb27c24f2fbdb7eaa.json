{"ast":null,"code":"var _jsxFileName = \"/home/joseph/Desktop/coding_mat/learning_react/first-react/src/Blog.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Bloglist from \"./Blocklist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  _s();\n  function deleteBlog(id) {\n    let newBlog = blogs.filter(blog => blog.id !== id);\n    setBlog(newBlog);\n  }\n\n  // passing array of state change to trigger use Effect\n  useEffect(() => {\n    console.log(\"Use effect ran\");\n    setTimeout(() => {\n      fetch('http://localhost:8000/blogpost').then(res => {\n        // throwing self error if not able to fetch data from api\n        if (!res.ok) {\n          throw Error('could not fetch data from api');\n        }\n        return res.json();\n      }).then(data => {\n        setIsloaded(false);\n        setBlog(data);\n        setErrors(null);\n      }).catch(error => {\n        setErrors(error.message);\n        setIsloaded(false); // so as not to display loading when there is an error\n      });\n    }, 2000);\n  }, []);\n  return (\n    /*#__PURE__*/\n    // sending usestate variable Blog as a props\n    _jsxDEV(\"article\", {\n      children: [errors && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), isloaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this), blogs && /*#__PURE__*/_jsxDEV(Bloglist, {\n        pBlog: blogs,\n        title: \"Blogs list\",\n        deleteBlog: deleteBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Blog, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["useState","useEffect","Bloglist","Blog","deleteBlog","id","newBlog","blogs","filter","blog","setBlog","console","log","setTimeout","fetch","then","res","ok","Error","json","data","setIsloaded","setErrors","catch","error","message","errors","isloaded"],"sources":["/home/joseph/Desktop/coding_mat/learning_react/first-react/src/Blog.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Bloglist from \"./Blocklist\";\n\nfunction Blog(){\n    \n    function deleteBlog(id){\n        let newBlog = blogs.filter((blog) => blog.id !== id);\n        setBlog(newBlog);\n    }\n\n    // passing array of state change to trigger use Effect\n    useEffect(() => {\n        console.log(\"Use effect ran\")\n        setTimeout(() => {\n            fetch('http://localhost:8000/blogpost')\n            .then((res) => {\n                // throwing self error if not able to fetch data from api\n                if(!res.ok)\n                {\n                    throw Error('could not fetch data from api');\n                }\n                return res.json();\n            })\n            .then((data) => {\n                setIsloaded(false);\n                setBlog(data);\n                setErrors(null);\n            })\n            .catch((error) => {\n                setErrors(error.message);\n                setIsloaded(false); // so as not to display loading when there is an error\n            });\n        }, 2000);\n    }, [])\n    return(\n        // sending usestate variable Blog as a props\n        <article >\n            { errors && <div>{ errors }</div> }\n            { isloaded && <div>Loading...</div> }\n            {blogs && < Bloglist pBlog = {blogs} title=\"Blogs list\" deleteBlog={deleteBlog}/> }\n            {/* using filter to send only some of the props data */}\n            {/* < Bloglist pBlog = {blogs.filter((blog) => blog.author === \"Joseph\")}  title = \"Joseph's blog list\"/> */}\n        </article>\n    )\n}\n\nexport default Blog;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,aAAa;AAAC;AAEnC,SAASC,IAAI,GAAE;EAAA;EAEX,SAASC,UAAU,CAACC,EAAE,EAAC;IACnB,IAAIC,OAAO,GAAGC,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;IACpDK,OAAO,CAACJ,OAAO,CAAC;EACpB;;EAEA;EACAL,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BC,UAAU,CAAC,MAAM;MACbC,KAAK,CAAC,gCAAgC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAK;QACX;QACA,IAAG,CAACA,GAAG,CAACC,EAAE,EACV;UACI,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAChD;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE;MACrB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACZC,WAAW,CAAC,KAAK,CAAC;QAClBX,OAAO,CAACU,IAAI,CAAC;QACbE,SAAS,CAAC,IAAI,CAAC;MACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QACdF,SAAS,CAACE,KAAK,CAACC,OAAO,CAAC;QACxBJ,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACN;IAAA;IACI;IACA;MAAA,WACMK,MAAM,iBAAI;QAAA,UAAOA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,EAC/BC,QAAQ,iBAAI;QAAA,UAAK;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM,EAClCpB,KAAK,iBAAI,QAAE,QAAQ;QAAC,KAAK,EAAIA,KAAM;QAAC,KAAK,EAAC,YAAY;QAAC,UAAU,EAAEH;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAG3E;AAElB;AAAC,GAzCQD,IAAI;AAAA,KAAJA,IAAI;AA2Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}