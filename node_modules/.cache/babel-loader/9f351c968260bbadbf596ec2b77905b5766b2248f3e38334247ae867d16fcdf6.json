{"ast":null,"code":"var _jsxFileName = \"/home/joseph/Desktop/coding_mat/learning_react/first-react/src/Blog.js\";\nimport { useState, useEffect } from \"react\";\nimport Bloglist from \"./Blocklist\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  /*function deleteBlog(id){\n      let newBlog = blogs.filter((blog) => blog.id !== id);\n      setBlog(newBlog);\n  } */\n  let {\n    data: blogs,\n    isloaded,\n    errors\n  } = useFetch;\n  return (\n    /*#__PURE__*/\n    // sending usestate variable Blog as a props\n    _jsxDEV(\"article\", {\n      children: [errors && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this), isloaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 27\n      }, this), blogs && /*#__PURE__*/_jsxDEV(Bloglist, {\n        pBlog: blogs,\n        title: \"Blogs list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["useState","useEffect","Bloglist","useFetch","Blog","data","blogs","isloaded","errors"],"sources":["/home/joseph/Desktop/coding_mat/learning_react/first-react/src/Blog.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Bloglist from \"./Blocklist\";\nimport useFetch from \"./useFetch\";\n\nfunction Blog(){\n\n    /*function deleteBlog(id){\n        let newBlog = blogs.filter((blog) => blog.id !== id);\n        setBlog(newBlog);\n    } */\n    let {data: blogs, isloaded, errors} = useFetch\n    return(\n        // sending usestate variable Blog as a props\n        <article >\n            { errors && <div>{ errors }</div> }\n            { isloaded && <div>Loading...</div> }\n            {blogs && < Bloglist pBlog = {blogs} title=\"Blogs list\"/> }\n            {/* using filter to send only some of the props data */}\n            {/* < Bloglist pBlog = {blogs.filter((blog) => blog.author === \"Joseph\")}  title = \"Joseph's blog list\"/> */}\n        </article>\n    )\n}\n\nexport default Blog;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,SAASC,IAAI,GAAE;EAEX;AACJ;AACA;AACA;EACI,IAAI;IAACC,IAAI,EAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGL,QAAQ;EAC9C;IAAA;IACI;IACA;MAAA,WACMK,MAAM,iBAAI;QAAA,UAAOA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,EAC/BD,QAAQ,iBAAI;QAAA,UAAK;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM,EAClCD,KAAK,iBAAI,QAAE,QAAQ;QAAC,KAAK,EAAIA,KAAM;QAAC,KAAK,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAGnD;AAElB;AAAC,KAjBQF,IAAI;AAmBb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}